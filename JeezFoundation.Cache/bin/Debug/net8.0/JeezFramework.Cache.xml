<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JeezFoundation.Cache</name>
    </assembly>
    <members>
        <member name="T:JeezFoundation.Cache.CachingAttribute">
            <summary>
            一个自定义属性，用于指示方法的缓存策略。
            </summary>
        </member>
        <member name="P:JeezFoundation.Cache.CachingAttribute.AbsoluteExpiration">
            <summary>
            获取或设置方法的绝对过期时间（以分钟为单位）。
            </summary>
            <value>
            过期时间，表示从方法调用后多长时间缓存将过期。
            </value>
        </member>
        <member name="T:JeezFoundation.Cache.CachingInterceptor">
            <summary>
            一个拦截器，用于实现方法级别的缓存功能。
            </summary>
        </member>
        <member name="P:JeezFoundation.Cache.CachingInterceptor.CacheProvider">
            <summary>
            从容器中注入的缓存提供者。
            </summary>
        </member>
        <member name="F:JeezFoundation.Cache.CachingInterceptor._linkChar">
            <summary>
            用于连接缓存键各个部分的字符。
            </summary>
        </member>
        <member name="M:JeezFoundation.Cache.CachingInterceptor.Invoke(AspectCore.DynamicProxy.AspectContext,AspectCore.DynamicProxy.AspectDelegate)">
            <summary>
            异步执行拦截器逻辑。
            </summary>
            <param name="context">拦截的上下文信息。</param>
            <param name="next">下一个拦截器或目标方法的委托。</param>
            <returns>一个代表异步操作的任务。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.CachingInterceptor.GetQCachingAttributeInfo(System.Reflection.MethodInfo)">
            <summary>
            获取方法上的 CachingAttribute 缓存属性信息。
            </summary>
            <param name="method">方法信息。</param>
            <returns>CachingAttribute 实例，如果没有则返回 null。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.CachingInterceptor.ProceedCaching(AspectCore.DynamicProxy.AspectContext,AspectCore.DynamicProxy.AspectDelegate,JeezFoundation.Cache.CachingAttribute)">
            <summary>
            处理缓存逻辑。
            </summary>
            <param name="context">拦截的上下文信息。</param>
            <param name="next">下一个拦截器或目标方法的委托。</param>
            <param name="attribute">CachingAttribute 缓存属性。</param>
            <returns>一个代表异步操作的任务。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.CachingInterceptor.GenerateCacheKey(AspectCore.DynamicProxy.AspectContext)">
            <summary>
            生成缓存键。
            </summary>
            <param name="context">拦截的上下文信息。</param>
            <returns>生成的缓存键。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.CachingInterceptor.GenerateCacheKey(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            生成缓存键。
            </summary>
            <param name="typeName">类名。</param>
            <param name="methodName">方法名。</param>
            <param name="parameters">参数列表。</param>
            <returns>生成的缓存键。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.CachingInterceptor.FormatArgumentsToPartOfCacheKey(System.Collections.Generic.IList{System.Reflection.ParameterInfo},System.Int32)">
            <summary>
            格式化方法参数为缓存键的一部分。
            </summary>
            <param name="methodArguments">方法参数信息列表。</param>
            <param name="maxCount">最大参数数量，默认为5。</param>
            <returns>参数值的列表。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.CachingInterceptor.GetArgumentValue(System.Object)">
            <summary>
            获取参数值，用于构建缓存键。
            </summary>
            <param name="arg">参数值。</param>
            <returns>参数值的字符串表示。</returns>
        </member>
        <member name="T:JeezFoundation.Cache.ICachable">
            <summary>
            定义了一个可缓存对象的接口，该接口规定了对象必须提供一个用于缓存的键。
            </summary>
        </member>
        <member name="P:JeezFoundation.Cache.ICachable.CacheKey">
            <summary>
            获取该对象用于缓存的唯一键。
            </summary>
            <value>
            一个字符串，用作缓存键。
            </value>
        </member>
        <member name="T:JeezFoundation.Cache.ICaching">
            <summary>
            定义了一个缓存接口，该接口可能用于标记可以进行缓存操作的对象或方法。
            </summary>
        </member>
        <member name="T:JeezFoundation.Cache.ICachingProvider">
            <summary>
            定义了一个缓存提供者的接口，该接口规定了缓存操作的基本方法。
            </summary>
        </member>
        <member name="M:JeezFoundation.Cache.ICachingProvider.Get(System.String)">
            <summary>
            根据提供的缓存键获取缓存项。
            </summary>
            <param name="cacheKey">要检索的缓存项的键。</param>
            <returns>缓存项，如果不存在则返回null。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.ICachingProvider.Get``1(System.Object)">
            <summary>
            泛型方法，根据提供的键获取指定类型的缓存项。
            </summary>
            <typeparam name="TItem">缓存项的类型，必须是引用类型。</typeparam>
            <param name="key">要检索的缓存项的键。</param>
            <returns>指定类型的缓存项，如果不存在则返回null。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.ICachingProvider.GetAsync(System.String)">
            <summary>
            异步方法，根据提供的缓存键获取缓存项。
            </summary>
            <param name="cacheKey">要检索的缓存项的键。</param>
            <returns>一个包含缓存项的任务对象，如果不存在则返回null。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.ICachingProvider.Set(System.String,System.Object)">
            <summary>
            设置缓存项。
            </summary>
            <param name="cacheKey">缓存项的键。</param>
            <param name="cacheValue">要存储的缓存项的值。</param>
        </member>
        <member name="M:JeezFoundation.Cache.ICachingProvider.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置缓存项，并指定相对于当前时间的绝对过期时间。
            </summary>
            <param name="cacheKey">缓存项的键。</param>
            <param name="cacheValue">要存储的缓存项的值。</param>
            <param name="absoluteExpirationRelativeToNow">相对于当前时间的绝对过期时间。</param>
        </member>
        <member name="M:JeezFoundation.Cache.ICachingProvider.SetAsync(System.String,System.Object,System.TimeSpan)">
            <summary>
            异步方法，设置缓存项，并指定相对于当前时间的绝对过期时间。
            </summary>
            <param name="cacheKey">缓存项的键。</param>
            <param name="cacheValue">要存储的缓存项的值。</param>
            <param name="absoluteExpirationRelativeToNow">相对于当前时间的绝对过期时间。</param>
            <returns>一个任务对象，表示设置缓存项的操作。</returns>
        </member>
        <member name="T:JeezFoundation.Cache.MemoryCachingProvider">
            <summary>
            实现了一个基于内存的缓存提供者，用于存储和检索缓存项。
            </summary>
        </member>
        <member name="F:JeezFoundation.Cache.MemoryCachingProvider._cache">
            <summary>
            私有成员变量，用于存储内存缓存实例。
            </summary>
        </member>
        <member name="M:JeezFoundation.Cache.MemoryCachingProvider.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            构造函数，用于初始化内存缓存提供者。
            </summary>
            <param name="cache">注入的内存缓存实例。</param>
        </member>
        <member name="M:JeezFoundation.Cache.MemoryCachingProvider.Get(System.String)">
            <summary>
            根据缓存键获取缓存项。
            </summary>
            <param name="cacheKey">要检索的缓存项的键。</param>
            <returns>缓存项，如果不存在则返回null。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.MemoryCachingProvider.Get``1(System.Object)">
            <summary>
            泛型方法，根据缓存键获取指定类型的缓存项。
            </summary>
            <typeparam name="TItem">缓存项的类型。</typeparam>
            <param name="key">要检索的缓存项的键。</param>
            <returns>指定类型的缓存项，如果不存在则返回null。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.MemoryCachingProvider.GetAsync(System.String)">
            <summary>
            异步方法，根据缓存键获取缓存项。
            </summary>
            <param name="cacheKey">要检索的缓存项的键。</param>
            <returns>缓存项，如果不存在则返回null。</returns>
        </member>
        <member name="M:JeezFoundation.Cache.MemoryCachingProvider.Set(System.String,System.Object)">
            <summary>
            设置缓存项。
            </summary>
            <param name="cacheKey">缓存项的键。</param>
            <param name="cacheValue">要存储的缓存项的值。</param>
        </member>
        <member name="M:JeezFoundation.Cache.MemoryCachingProvider.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置缓存项，并指定相对于当前时间的绝对过期时间。
            </summary>
            <param name="cacheKey">缓存项的键。</param>
            <param name="cacheValue">要存储的缓存项的值。</param>
            <param name="absoluteExpirationRelativeToNow">相对于当前时间的绝对过期时间。</param>
        </member>
        <member name="M:JeezFoundation.Cache.MemoryCachingProvider.SetAsync(System.String,System.Object,System.TimeSpan)">
            <summary>
            异步方法，设置缓存项，并指定相对于当前时间的绝对过期时间。
            </summary>
            <param name="cacheKey">缓存项的键。</param>
            <param name="cacheValue">要存储的缓存项的值。</param>
            <param name="absoluteExpirationRelativeToNow">相对于当前时间的绝对过期时间。</param>
        </member>
    </members>
</doc>
