<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JeezFoundation.Core</name>
    </assembly>
    <members>
        <member name="T:JeezFoundation.Core.Attributes.EnumDescriptionAttribute">
            <summary>
            枚举描述特性
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Attributes.EnumDescriptionAttribute.Description">
            <summary>
            枚举注释
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Attributes.EnumDescriptionAttribute.#ctor(System.String)">
            <summary>
            构造器传入枚举描述注释
            </summary>
            <param name="description">枚举描述注释</param>
        </member>
        <member name="T:JeezFoundation.Core.BaseModel">
            <summary>
            实体基类
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.BaseModel.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.BaseModel.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.BaseModel.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Consul.ConsulOptions">
            <summary>
            Consul Options
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Consul.ServiceOptions.Interval">
            <summary>
            间隔
            默认10秒一次
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Dapper.ClassMapper`1">
            <summary>
            Maps an entity to a table through a collection of property maps.
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Dapper.ClassMapper`1.SchemaName">
            <summary>
            Gets or sets the schema to use when referring to the corresponding table name in the database.
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Dapper.ClassMapper`1.TableName">
            <summary>
            Gets or sets the table to use in the database.
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Dapper.ClassMapper`1.Properties">
            <summary>
            A collection of properties that will map to columns in the database table.
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Dapper.ClassMapper`1.Map(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Fluently, maps an entity property to a column
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Dapper.ClassMapper`1.Map(System.Reflection.PropertyInfo)">
            <summary>
            Fluently, maps an entity property to a column
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Dapper.IdentityAttribute">
            <summary>
                Identity key
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Dapper.IPropertyMap">
            <summary>
            Maps an entity property to its corresponding column in the database.
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Dapper.PropertyMap">
            <summary>
            Maps an entity property to its corresponding column in the database.
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Dapper.PropertyMap.Name">
            <summary>
            Gets the name of the property by using the specified propertyInfo.
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Dapper.PropertyMap.ColumnName">
            <summary>
            Gets the column name for the current property.
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Dapper.PropertyMap.KeyType">
            <summary>
            Gets the key type for the current property.
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Dapper.PropertyMap.Ignored">
            <summary>
            Gets the ignore status of the current property. If ignored, the current property will not be included in queries.
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Dapper.PropertyMap.IsReadOnly">
            <summary>
            Gets the read-only status of the current property. If read-only, the current property will not be included in INSERT and UPDATE queries.
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Dapper.PropertyMap.PropertyInfo">
            <summary>
            Gets the property info for the current property.
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Dapper.PropertyMap.Column(System.String)">
            <summary>
            Fluently sets the column name for the property.
            </summary>
            <param name="columnName">The column name as it exists in the database.</param>
        </member>
        <member name="M:JeezFoundation.Core.Dapper.PropertyMap.Key(JeezFoundation.Core.Dapper.KeyType)">
            <summary>
            Fluently sets the key type of the property.
            </summary>
            <param name="columnName">The column name as it exists in the database.</param>
        </member>
        <member name="M:JeezFoundation.Core.Dapper.PropertyMap.Ignore">
            <summary>
            Fluently sets the ignore status of the property.
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Dapper.PropertyMap.ReadOnly">
            <summary>
            Fluently sets the read-only status of the property.
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Dapper.KeyType">
            <summary>
            Used by ClassMapper to determine which entity property represents the key.
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Dapper.KeyType.NotAKey">
            <summary>
            The property is not a key and is not automatically managed.
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Dapper.KeyType.Identity">
            <summary>
            The property is an integery-based identity generated from the database.
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Dapper.KeyType.Guid">
            <summary>
            The property is a Guid identity which is automatically managed.
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Dapper.KeyType.Assigned">
            <summary>
            The property is a key that is not automatically managed.
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Authorization.AuthorizationHttpClientHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Authorization.AuthorizationHttpClientHandler.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="authorizationCode"></param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Authorization.AuthorizationHttpClientHandler.#ctor(System.Func{System.Threading.Tasks.Task{System.String}})">
            <summary>
            
            </summary>
            <param name="getToken"></param>
        </member>
        <member name="T:JeezFoundation.Core.Domain.CodeBuilder.MySQL.Table">
            <summary>
            表
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.Table.TABLE_NAME">
            <summary>
            表明
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.Table.TABLE_TYPE">
            <summary>
            表类型
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.Table.TABLE_COMMENT">
            <summary>
            表描述
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn">
            <summary>
            表列信息
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn.TABLE_NAME">
            <summary>
            表明
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn.COLUMN_NAME">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn.IS_NULLABLE">
            <summary>
            是否可空
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn.DATA_TYPE">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn.COLUMN_COMMENT">
            <summary>
            列描述
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn.COLUMN_KEY">
            <summary>
            主键/外键
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn.CHARACTER_MAXIMUM_LENGTH">
            <summary>
            字段长度
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch.Database">
            <summary>
            databse
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch.DataSource">
            <summary>
            datasource
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch.UserId">
            <summary>
            userid
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch.Password">
            <summary>
            password
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch.Namespace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch.CreateUser">
            <summary>
            创建人
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch.Type">
            <summary>
            生成类型
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.CodeBuilder.StringProvider.GetEFModel(JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch,JeezFoundation.Core.Domain.CodeBuilder.MySQL.Table,System.Collections.Generic.List{JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn})">
            <summary>
            创建MYSQL实体 FOR EF
            </summary>
            <param name="search"></param>
            <param name="table"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.CodeBuilder.StringProvider.GetEFMapping(JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch,JeezFoundation.Core.Domain.CodeBuilder.MySQL.Table,System.Collections.Generic.List{JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn})">
            <summary>
            获取EF映射
            </summary>
            <param name="search"></param>
            <param name="table"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.CodeBuilder.StringProvider.GetGM_NH_Model(JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch,JeezFoundation.Core.Domain.CodeBuilder.MySQL.Table,System.Collections.Generic.List{JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn})">
            <summary>
            创建MYSQL实体 FOR GM NH
            </summary>
            <param name="search"></param>
            <param name="table"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.CodeBuilder.StringProvider.GetGM_NH_Mapping(JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableSearch,JeezFoundation.Core.Domain.CodeBuilder.MySQL.Table,System.Collections.Generic.List{JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn})">
            <summary>
            获取GM-NH映射
            </summary>
            <param name="search"></param>
            <param name="table"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.CodeBuilder.StringProvider.GetType(JeezFoundation.Core.Domain.CodeBuilder.MySQL.TableColumn)">
            <summary>
            获取类型
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.CodeBuilder.CodeBuilderType">
            <summary>
            生成代码类型
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Container.ICacheContainer">
            <summary>
            缓存容器接口
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.ICacheContainer.Get``1(System.String)">
            <summary>
            获取
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">key</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.ICacheContainer.Set``1(System.String,``0,System.Int32)">
            <summary>
            设置
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">key</param>
            <param name="t">数据</param>
            <param name="timeout">过期时间</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.ICacheContainer.GetList``1(System.String)">
            <summary>
            获取集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">KEY</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.ICacheContainer.SetList``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            设置集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">KEY</param>
            <param name="list">数据</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.ICacheContainer.SetList``1(System.String,System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            设置集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">KEY</param>
            <param name="list">数据</param>
            <param name="timeout">过期时间</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.ICacheContainer.Remove(System.String)">
            <summary>
            移除数据
            </summary>
            <param name="key">KEY</param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Container.IPermissionStorageContainer">
            <summary>
            permission storage
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.IPermissionStorageContainer.GetPermissionAsync">
            <summary>
            异步获取用户权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.IPermissionStorageContainer.InitAsync">
            <summary>
            异步初始化权限
            </summary>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Container.IStorageContainer">
            <summary>
            存储容器接口
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Container.IStorageContainer.Key">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.IStorageContainer.Store(System.Object)">
            <summary>
            存储
            </summary>
            <param name="obj">要存储的对象</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Container.IStorageContainer.Get">
            <summary>
            获取容器存储的数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.DynamicXml">
            <summary>
            动态XML类型
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.BaseSearch">
            <summary>
            搜索基类
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.BaseSearch.PageIndex">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.BaseSearch.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.BaseSearch.IsDel">
            <summary>
            显示状态
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Entities.BaseSearch.OffSet">
            <summary>
            OffSet
            </summary>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.ClientToken">
            <summary>
            客户端token实体
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ClientToken.Access_Token">
            <summary>
            token
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ClientToken.Expires_In">
            <summary>
            过期时间（秒）
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ClientToken.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Entities.ClientToken.IsExpired(System.Nullable{System.UInt32})">
            <summary>
            是否过期
            </summary>
            <param name="advanceSeconds">提前秒数</param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.IEntity">
            <summary>
            数据实体接口
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.Page`1">
            <summary>
            分页实体
            </summary>
            <typeparam name="TEntity">实体</typeparam>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Entities.Page`1.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.Page`1.PageIndex">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.Page`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.Page`1.TotalItems">
            <summary>
            查询集合总个数
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.Page`1.PageSize">
            <summary>
            每页项数
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.Page`1.Items">
            <summary>
            查询集合
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.ResponseToken">
            <summary>
            TOKEN返回响应
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ResponseToken.access_token">
            <summary>
            token
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ResponseToken.expires_in">
            <summary>
            过期时间（秒）
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.RouteName">
            <summary>
            路由基本实体
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.RouteName.Areas">
            <summary>
            区域名称
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.RouteName.Controller">
            <summary>
            控制器名称
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.RouteName.Action">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.SelectListItem">
            <summary>
            下拉控件实体
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.SelectListItem.Disabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.SelectListItem.Selected">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.SelectListItem.Text">
            <summary>
            文本值
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.SelectListItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.UserIdentity">
            <summary>
            用户实体
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.UserIdentity.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.UserIdentity.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.UserIdentity.HeadImg">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.UserIdentity.Sex">
            <summary>
            用户性别
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.UserIdentity.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.UserIdentity.Other">
            <summary>
             其他属性
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.UserSex">
            <summary>
            用户性别
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Entities.UserSex.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Entities.UserSex.Male">
            <summary>
            先生
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Entities.UserSex.Female">
            <summary>
            女士
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Entities.ZTree">
            <summary>
            ztree树 数据结构
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ZTree.id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ZTree.pId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ZTree.name">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ZTree.open">
            <summary>
            是否打开
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Entities.ZTree.checked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Enum.ButtonType">
            <summary>
            按钮操作类型
            最好不要动
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.ButtonType.View">
            <summary>
            查看
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.ButtonType.Add">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.ButtonType.Edit">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.ButtonType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.ButtonType.Print">
            <summary>
            打印
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.ButtonType.Check">
            <summary>
            审核
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.ButtonType.Cancle">
            <summary>
            作废
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.ButtonType.Finish">
            <summary>
            结束
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.ButtonType.Extend">
            <summary>
            扩展
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Enum.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.LogLevel.Trace">
            <summary>
            细微
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.LogLevel.Debug">
            <summary>
            调试
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.LogLevel.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.LogLevel.Warn">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.LogLevel.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.LogLevel.Fatal">
            <summary>
            严重
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.LogLevel.Off">
            <summary>
            无
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Enum.LogLevel.Login">
            <summary>
            登录
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Permission.Menu">
            <summary>
            菜单
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.Menu.MenuId">
            <summary>
            菜单ID
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.Menu.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.Menu.SystemId">
            <summary>
            所属系统ID
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.Menu.MenuName">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.Menu.MenuUrl">
            <summary>
            菜单地址
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.Menu.MenuButton">
            <summary>
            菜单按钮实体
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Permission.MenuButton">
            <summary>
            菜单按钮实体
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.MenuButton.Id">
            <summary>
            按钮ID
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.MenuButton.ButtonName">
            <summary>
            按钮名称
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.MenuButton.ButtonType">
            <summary>
            按钮类别
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.MenuButton.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.MenuButton.ButtonClass">
            <summary>
            按钮样式
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.MenuButton.Icon">
            <summary>
            按钮图标样式
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Permission.PermissionStatusCodes">
            <summary>
            权限访问状态返回
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Permission.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.Role.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.Role.SystemId">
            <summary>
            系统ID
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.Role.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Permission.UserPermission">
            <summary>
            用户权限
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.UserPermission.Menus">
            <summary>
            菜单
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.UserPermission.Roles">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Permission.UserPermission.Others">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Repositories.IRepository`2">
            <summary>
            仓储接口
            </summary>
            <typeparam name="TEntity">实体</typeparam>
            <typeparam name="TPrimaryKey">主键类型</typeparam>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.GetAll">
            <summary>
            Used to get a IQueryable that is used to retrieve entities from entire table.
            </summary>
            <returns>IQueryable to be used to select entities from database</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.LoadEntities">
            <summary>
            <see cref="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.GetAll"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Used to get a IQueryable that is used to retrieve entities from entire table.
            One or more 
            </summary>
            <param name="propertySelectors">A list of include expressions.</param>
            <returns>IQueryable to be used to select entities from database</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.GetAllList">
            <summary>
            Used to get all entities.
            </summary>
            <returns>List of all entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.GetAllListAsync">
            <summary>
            Used to get all entities.
            </summary>
            <returns>List of all entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.GetAllList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Used to get all entities based on given <paramref name="predicate"/>.
            </summary>
            <param name="predicate">A condition to filter entities</param>
            <returns>List of all entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.GetAllListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Used to get all entities based on given <paramref name="predicate"/>.
            </summary>
            <param name="predicate">A condition to filter entities</param>
            <returns>List of all entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Query``1(System.Func{System.Linq.IQueryable{`0},``0})">
            <summary>
            Used to run a query over entire entities.
            <see cref="!:UnitOfWorkAttribute"/> attribute is not always necessary (as opposite to <see cref="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.GetAll"/>)
            if <paramref name="queryMethod"/> finishes IQueryable with ToList, FirstOrDefault etc..
            </summary>
            <typeparam name="T">Type of return value of this method</typeparam>
            <param name="queryMethod">This method is used to query over entities</param>
            <returns>Query result</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Get(`1)">
            <summary>
            Gets an entity with given primary key.
            </summary>
            <param name="id">Primary key of the entity to get</param>
            <returns>Entity</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.GetAsync(`1)">
            <summary>
            Gets an entity with given primary key.
            </summary>
            <param name="id">Primary key of the entity to get</param>
            <returns>Entity</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets exactly one entity with given predicate.
            Throws exception if no entity or more than one entity.
            </summary>
            <param name="predicate">Entity</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.SingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets exactly one entity with given predicate.
            Throws exception if no entity or more than one entity.
            </summary>
            <param name="predicate">Entity</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.FirstOrDefault(`1)">
            <summary>
            Gets an entity with given primary key or null if not found.
            </summary>
            <param name="id">Primary key of the entity to get</param>
            <returns>Entity or null</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.FirstOrDefaultAsync(`1)">
            <summary>
            Gets an entity with given primary key or null if not found.
            </summary>
            <param name="id">Primary key of the entity to get</param>
            <returns>Entity or null</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets an entity with given given predicate or null if not found.
            </summary>
            <param name="predicate">Predicate to filter entities</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets an entity with given given predicate or null if not found.
            </summary>
            <param name="predicate">Predicate to filter entities</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Load(`1)">
            <summary>
            Creates an entity with given primary key without database access.
            </summary>
            <param name="id">Primary key of the entity to load</param>
            <returns>Entity</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Page(System.Int32,System.Int32)">
            <summary>
            分页
            </summary>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.PageAsync(System.Int32,System.Int32)">
            <summary>
            分页异步
            </summary>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Page``1(System.Int32,System.Int32,System.Func{`0,``0})">
            <summary>
            分页
            </summary>
            <typeparam name="TKey">排序字段类型</typeparam>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <param name="keySelector">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.PageDesc``1(System.Int32,System.Int32,System.Func{`0,``0})">
            <summary>
            分页
            </summary>
            <typeparam name="TKey">排序字段类型</typeparam>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <param name="keySelector">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.PageAsync``1(System.Int32,System.Int32,System.Func{`0,``0})">
            <summary>
            分页异步
            </summary>
            <typeparam name="TKey">排序字段类型</typeparam>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <param name="keySelector">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.PageDescAsync``1(System.Int32,System.Int32,System.Func{`0,``0})">
            <summary>
            分页异步
            </summary>
            <typeparam name="TKey">排序字段类型</typeparam>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <param name="keySelector">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Page``1(System.Int32,System.Int32,System.Func{`0,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            分页
            </summary>
            <typeparam name="TKey">排序字段类型</typeparam>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <param name="keySelector">排序字段</param>
            <param name="predicate">表达式树</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.PageDesc``1(System.Int32,System.Int32,System.Func{`0,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            分页
            </summary>
            <typeparam name="TKey">排序字段类型</typeparam>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <param name="keySelector">排序字段</param>
            <param name="predicate">表达式树</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.PageAsync``1(System.Int32,System.Int32,System.Func{`0,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            分页异步
            </summary>
            <typeparam name="TKey">排序字段类型</typeparam>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <param name="keySelector">排序字段</param>
            <param name="predicate">表达式树</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.PageDescAsync``1(System.Int32,System.Int32,System.Func{`0,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            分页异步
            </summary>
            <typeparam name="TKey">排序字段类型</typeparam>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页大小</param>
            <param name="keySelector">排序字段</param>
            <param name="predicate">表达式树</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Insert(`0)">
            <summary>
            Inserts a new entity.
            </summary>
            <param name="entity">Inserted entity</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Update(`0)">
            <summary>
            Updates an existing entity.
            </summary>
            <param name="entity">Entity</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Delete(`0)">
            <summary>
            Deletes an entity.
            </summary>
            <param name="entity">Entity to be deleted</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Deletes many entities by function.
            Notice that: All entities fits to given predicate are retrieved and deleted.
            This may cause major performance problems if there are too many entities with
            given predicate.
            </summary>
            <param name="predicate">A condition to filter entities</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Deletes many entities by function.
            Notice that: All entities fits to given predicate are retrieved and deleted.
            This may cause major performance problems if there are too many entities with
            given predicate.
            </summary>
            <param name="predicate">A condition to filter entities</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Count">
            <summary>
            Gets count of all entities in this repository.
            </summary>
            <returns>Count of entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.CountAsync">
            <summary>
            Gets count of all entities in this repository.
            </summary>
            <returns>Count of entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets count of all entities in this repository based on given <paramref name="predicate"/>.
            </summary>
            <param name="predicate">A method to filter count</param>
            <returns>Count of entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets count of all entities in this repository based on given <paramref name="predicate"/>.
            </summary>
            <param name="predicate">A method to filter count</param>
            <returns>Count of entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.LongCount">
            <summary>
            Gets count of all entities in this repository (use if expected return value is greather than <see cref="F:System.Int32.MaxValue"/>.
            </summary>
            <returns>Count of entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.LongCountAsync">
            <summary>
            Gets count of all entities in this repository (use if expected return value is greather than <see cref="F:System.Int32.MaxValue"/>.
            </summary>
            <returns>Count of entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.LongCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets count of all entities in this repository based on given <paramref name="predicate"/>
            (use this overload if expected return value is greather than <see cref="F:System.Int32.MaxValue"/>).
            </summary>
            <param name="predicate">A method to filter count</param>
            <returns>Count of entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.LongCountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets count of all entities in this repository based on given <paramref name="predicate"/>
            (use this overload if expected return value is greather than <see cref="F:System.Int32.MaxValue"/>).
            </summary>
            <param name="predicate">A method to filter count</param>
            <returns>Count of entities</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.ToSqlList``1(System.String)">
            <summary>
            SQL查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Repositories.IRepository`2.ToSqlList``1(System.String,System.String)">
            <summary>
            SQL查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="connectionString">连接字符串</param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Result.AjaxResult">
            <summary>
            前台Ajax请求的统一返回结果类
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.AjaxResult.IsError">
            <summary>
            是否产生错误
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.AjaxResult.Message">
            <summary>
            错误信息，或者成功信息
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.AjaxResult.Data">
            <summary>
            成功可能时返回的数据
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.AjaxResult.Error">
            <summary>
            错误
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.AjaxResult.Error(System.String)">
            <summary>
            错误
            </summary>
            <param name="message">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.AjaxResult.Success">
            <summary>
            Success
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.AjaxResult.Success(System.String)">
            <summary>
            Success
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.AjaxResult.Success(System.Object)">
            <summary>
            Success
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.AjaxResult.Success(System.Object,System.String)">
            <summary>
            Success
            </summary>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Result.ILoginResult`1">
            <summary>
            登录实体接口
            </summary>
            <typeparam name="TUser">返回实体类型</typeparam>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ILoginResult`1.User">
            <summary>
            返回实体
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ILoginResult`1.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ILoginResult`1.LoginStatus">
            <summary>
            登录状态返回
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Result.LoginResult`1">
            <summary>
            登录实体
            </summary>
            <typeparam name="TUser">返回实体类型</typeparam>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.LoginResult`1.User">
            <summary>
            返回实体
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.LoginResult`1.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.LoginResult`1.LoginStatus">
            <summary>
            登录状态返回
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Result.LoginStatus">
            <summary>
            登录状态枚举
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.LoginStatus.Error">
            <summary>
            用户名或密码错误
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.LoginStatus.Success">
            <summary>
            登录成功
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.LoginStatus.Exception">
            <summary>
            程序异常
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Result.IOperationResult`1">
            <summary>
            操作结果类接口
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.IOperationResult`1.Result">
            <summary>
            获取或设置 操作结果
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.IOperationResult`1.Message">
            <summary>
            获取或设置 执行消息
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.IOperationResult`1.Status">
            <summary>
            获取或设置 操作状态
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Result.OperationResult`1">
            <summary>
            操作结果类
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.OperationResult`1.Result">
            <summary>
            获取或设置 操作结果
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.OperationResult`1.Message">
            <summary>
            获取或设置 执行消息
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.OperationResult`1.Status">
            <summary>
            获取或设置 操作状态
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Result.OperationStatus">
            <summary>
            操作状态
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.OperationStatus.Success">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.OperationStatus.NoChanged">
            <summary>
            操作取消或操作没引发任何变化
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.OperationStatus.ParamError">
            <summary>
            参数错误
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.OperationStatus.QueryNull">
            <summary>
            指定参数的数据不存在
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.OperationStatus.PurviewLack">
            <summary>
            权限不足
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.OperationStatus.IllegalOperation">
            <summary>
            非法操作
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.OperationStatus.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.OperationStatus.Error">
            <summary>
            操作引发错误
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Domain.Result.OperationStatus.Exception">
            <summary>
            程序异常
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Result.ResponseResult">
            <summary>
            响应结果类
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult.Status">
            <summary>
            状态(0-default, 1-success, -1-error)
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult.Message">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult.NewID">
            <summary>
            新ID值
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult.ExtraData">
            <summary>
            消息额外数据
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.ResponseResult.Default(System.String)">
            <summary>
            响应消息封装类
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.ResponseResult.Success(System.String)">
            <summary>
            响应消息封装类
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.ResponseResult.Success(System.Object,System.String)">
            <summary>
            响应消息封装类，用于插入操作，返回新ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.ResponseResult.Error(System.String)">
            <summary>
            响应消息封装类
            </summary>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Result.ResponseResult`1">
            <summary>
            响应消息类(泛型)
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult`1.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult`1.Message">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult`1.NewID">
            <summary>
            新GUID值
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult`1.Entity">
            <summary>
            业务实体
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Result.ResponseResult`1.TotalRowsCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.ResponseResult`1.Default">
            <summary>
            响应消息封装类
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.ResponseResult`1.Success(`0,System.String)">
            <summary>
            响应消息封装类
            </summary>
            <param name="Status">状态:1-成功; 0-缺省; -1失败</param>
            <param name="Message">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.ResponseResult`1.Success(System.Int32,System.String)">
            <summary>
            响应消息封装类，用于插入操作，返回新ID
            </summary>
            <param name="Status">状态:1-成功; 0-缺省; -1失败</param>
            <param name="Message">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Result.ResponseResult`1.Error(System.String)">
            <summary>
            Http 响应消息封装类
            </summary>
            <param name="Status">状态:1-成功; 0-缺省; -1失败</param>
            <param name="Message">消息内容</param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Security.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Security.Token.AccessToken">
            <summary>
            accesstoken
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.Domain.Security.Token.ExpriesIn">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Domain.Uow.IUnitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Uow.IUnitOfWork.Insert(JeezFoundation.Core.Domain.Entities.IEntity)">
            <summary>
            新增
            </summary>
            <param name="entity">实体表</param>
            <returns>返回更新后的实体</returns>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Uow.IUnitOfWork.Update(JeezFoundation.Core.Domain.Entities.IEntity)">
            <summary>
            Updates an existing entity.
            </summary>
            <param name="entity">Entity</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Uow.IUnitOfWork.Delete(JeezFoundation.Core.Domain.Entities.IEntity)">
            <summary>
            Deletes an entity.
            </summary>
            <param name="entity">Entity to be deleted</param>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Uow.IUnitOfWork.Commit">
            <summary>
            提交
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Domain.Uow.IUnitOfWork.CommitAsync">
            <summary>
            异步提交
            </summary>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Enum`1">
            <summary>
            枚举泛型类
            </summary>
            <typeparam name="T">枚举类型</typeparam>
        </member>
        <member name="M:JeezFoundation.Core.Enum`1.AsEnumerable">
            <summary>
            转换成Enumerable
            </summary>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.EnumQuery`1">
            <summary>
            Enum查询类
            </summary>
            <typeparam name="T">枚举类型</typeparam>
        </member>
        <member name="M:JeezFoundation.Core.EnumQuery`1.GetEnumerator">
            <summary>
            实现迭代
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.EnumQuery`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            在转换成List调用迭代器
            </summary>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.ButtonExtension">
            <summary>
            按钮扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ButtonExtension.ToClass(JeezFoundation.Core.Domain.Enum.ButtonType)">
            <summary>
            根据菜单类型获取菜单图标
            </summary>
            <param name="buttonType"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.ClaimsPrincipalExtentions">
            <summary>
            Claims extentions
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ClaimsPrincipalExtentions.ToUserIdentity(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            ClaimsPrincipal 转 UserIdentity
            </summary>
            <param name="principal"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ClaimsPrincipalExtentions.ToClaims(JeezFoundation.Core.Domain.Entities.UserIdentity)">
            <summary>
            UserIdentity 转 Claim
            </summary>
            <param name="userIdentity"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.CollectionExtensions">
            <summary>
            Extension methods for Collections.
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Checks whatever given collection object is null or has no item.
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.CollectionExtensions.AddIfNotContains``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>
            Adds an item to the collection if it's not already in the collection.
            </summary>
            <param name="source">Collection</param>
            <param name="item">Item to check and add</param>
            <typeparam name="T">Type of the items in the collection</typeparam>
            <returns>Returns True if added, returns False if not.</returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.EnumerableExtensions">
            <summary>
            Enumerable集合扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            区分去重
            </summary>
            <typeparam name="TSource">实体类型</typeparam>
            <typeparam name="TKey">去重返回值类型</typeparam>
            <param name="source">要去重的集合</param>
            <param name="keySelector">去重表达</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.EnumerableExtensions.Random``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            随机取IEnumerable中的一个对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="source">IEnumerable</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.EnumerableExtensions.Random``1(System.Collections.Generic.IEnumerable{``0},System.Random)">
            <summary>
            随机取IEnumerable中的一个对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="source">IEnumerable</param>
            <param name="random">随机对象</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            IEnumerable集合中加入分隔符
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <param name="separator">分隔符默认 ,</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.EnumerableExtensions.HasItems``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            判断IEnumerable是否有元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.EnumerableExtensions.ToSelectListItem``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            <see cref="T:System.Collections.IEnumerable"/>转换成<see cref="T:JeezFoundation.Core.Domain.Entities.SelectListItem"/>集合类型
            </summary>
            <typeparam name="TSource">数据元素类型</typeparam>
            <typeparam name="TValue"><see cref="T:JeezFoundation.Core.Domain.Entities.SelectListItem"/>值类型</typeparam>
            <typeparam name="TText"><see cref="T:JeezFoundation.Core.Domain.Entities.SelectListItem"/>显示文本类型</typeparam>
            <param name="source">数据</param>
            <param name="valueSelector">用于从每个元素中提取值的函数</param>
            <param name="textSelector">用于从每个元素中提取文本的函数</param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.EnumExtensions">
            <summary>
            枚举扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.EnumExtensions.GetDescription(System.Enum)">
            <summary>
            获取枚举类型的描述
            </summary>
            <param name="enumeration"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.ExceptionExtensions">
            <summary>
            异常 扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ExceptionExtensions.ToLogMessage(System.Exception)">
            <summary>
            转换成日志相关信息
            </summary>
            <param name="exception">异常</param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.HttpClientExtensions">
            <summary>
            HttpClient 扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.HttpClientExtensions.PostBooleanAsync(System.Net.Http.HttpClient,System.String,System.Object)">
            <summary>
            返回值必须是bool类型的请求
            </summary>
            <param name="httpClient"></param>
            <param name="uri"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.HttpClientExtensions.GetObjectAsync``1(System.Net.Http.HttpClient,System.String)">
            <summary>
            获取对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="httpClient"></param>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.IntegerExtensions">
            <summary>
            整型扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.IntegerExtensions.IsNull(System.Nullable{System.Byte})">
            <summary>
            是否为空
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.IntegerExtensions.IsNull(System.Nullable{System.SByte})">
            <summary>
            是否为空
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.IntegerExtensions.IsNull(System.Nullable{System.Int16})">
            <summary>
            是否为空
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.IntegerExtensions.IsNull(System.Nullable{System.Int32})">
            <summary>
            是否为空
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.IntegerExtensions.IsNull(System.Nullable{System.Int64})">
            <summary>
            是否为空
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.ObjectExtensions">
            <summary>
            object类型扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.ToObject``1(System.String)">
            <summary>
            Json转对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.ToJson(System.Object)">
            <summary>
            对象转JSON
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.ToUrlParam(System.Object)">
            <summary>
            将对象序列化成url参数形式
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.IsNull(System.Object)">
            <summary>
            判断对象是否为空
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.IsNotNull(System.Object)">
            <summary>
            判断对象不是空
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.In``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            是否存在<see cref="!:T"/>集合中
            </summary>
            <typeparam name="T">集合类型</typeparam>
            <param name="value">要判断的值</param>
            <param name="list">集合</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.ReadValue``2(``0,System.Func{``0,``1})">
            <summary>
            Returns the result of <paramref name="func"/> if <paramref name="obj"/> is not null.
            <example>
            <code>
            Request.Url.ReadValue(x => x.Query)
            </code>
            </example>
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="obj">The obj.</param>
            <param name="func">The func.</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.ReadValue``2(``0,System.Func{``0,``1},``1)">
            <summary>
            Returns the result of <paramref name="func"/> if <paramref name="obj"/> is not null.
            Otherwise, <paramref name="defaultValue"/> is returned.
            <example>
            <code>
            Request.Url.ReadValue(x => x.Query, "default")
            </code>
            </example>
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="obj"></param>
            <param name="func"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.ExecuteAction``1(``0,System.Action{``0})">
            <summary>
            Executes an action if <paramref name="obj"/> is not null, otherwise does nothing
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="action"></param>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.ReadNullableValue``2(System.Nullable{``0},System.Func{``0,``1})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="obj"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.ObjectExtensions.ReadNullableValue``2(System.Nullable{``0},System.Func{``0,``1},``1)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="obj"></param>
            <param name="func"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.StringExtentions">
            <summary>
            字符串方法扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToHump(System.String)">
            <summary>
            驼峰命名
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToOnlyHump(System.String)">
            <summary>
            驼峰命名（不移除 _ ）
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToPinYin(System.String)">
            <summary>
            转拼音
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToUpperHead(System.String)">
            <summary>
            换为首字母大写的字符串
            </summary>
            <param name="str">源字符串</param>
            <returns>首字母大写的字符串</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.TrimBlank(System.String)">
            <summary>
            删除字符串头部和尾部的回车/换行/空格
            </summary>
            <param name="str">字符串</param>
            <returns>清除回车/换行/空格之后的字符串</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.TrimRight(System.String)">
            <summary>
            删除字符串尾部的回车/换行/空格
            </summary>
            <param name="str">字符串</param>
            <returns>清除回车/换行/空格之后的字符串</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.TrimLeft(System.String)">
            <summary>
            删除字符串头部的回车/换行/空格
            </summary>
            <param name="str">字符串</param>
            <returns>清除回车/换行/空格之后的字符串</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.MatchesCount(System.String,System.String)">
            <summary>
            相同字符串的数量
            </summary>
            <param name="source">字符串</param>
            <param name="pattern">相比较字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.CharCodeLength(System.String)">
            <summary>
            获取字符串长度，按中文2位，英文1位进行计算
            </summary>
            <param name="source">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToBoolean(System.String)">
            <summary>
            字符串转换成bool类型
            </summary>
            <param name="source">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToByte(System.String)">
            <summary>
            转化为Byte型
            </summary>
            <returns>Byte</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToShort(System.String)">
            <summary>
            转化为Short型
            </summary>
            <returns>Short</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToInt16(System.String)">
            <summary>
            转化为Short型
            </summary>
            <returns>Short</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToInt32(System.String)">
            <summary>
            转化为int32型
            </summary>
            <returns>int32</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToInt64(System.String)">
            <summary>
            转化为int64型
            </summary>
            <returns>int64</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToDouble(System.String)">
            <summary>
            转化为Double型
            </summary>
            <returns>decimal</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToDecimal(System.String)">
            <summary>
            转化为decimal型
            </summary>
            <returns>decimal</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToDateTimeDecimal(System.String)">
            <summary>
            转化为数字类型的日期
            </summary>
            <returns>DateTime</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToDateTimeDecimal(System.DateTime)">
            <summary>
            HDF
            2009-3-12
            将时间转换成数字
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToTextArea(System.String)">
            <summary>
            转换成TextArea保存的格式；（textarea中的格式保存显示的时候会失效）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.Substring(System.String,System.Int32)">
            <summary>
            SubString方法扩展
            </summary>
            <param name="str">截取字符串</param>
            <param name="length">要截取的长度</param>
            <returns>string</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.SubstringToSx(System.String,System.Int32)">
            <summary>
            截取字符并显示...符号
            </summary>
            <param name="str">截取字符串</param>
            <param name="length">要截取的长度</param>
            <returns>string</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.SubstringUpToFirst(System.String,System.Char)">
            <summary>
            根据某个字符截取
            </summary>
            <param name="text">要截取的字符串</param>
            <param name="delimiter">字符</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToIntList(System.String,System.Char)">
            <summary>
            字符串拼接成的数组转换成集合
            </summary>
            <param name="arrStr">要转换的字符串</param>
            <param name="splitchar">分离字符(默认,)</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToIntArray(System.String,System.Char)">
            <summary>
            将字符串转换成int类型的数组
            </summary>
            <param name="arrStr">要转换的字符串</param>
            <param name="splitchar">分离字符(默认,)</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.GetPropertyValue``1(``0,System.String)">
            <summary>
            反射获取属性值
            </summary>
            <typeparam name="T">匿名对象</typeparam>
            <param name="t">匿名对象集合</param>
            <param name="propertyname">属性名</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsNullOrEmpty(System.String)">
            <summary>
            是否为空
            </summary>
            <param name="source">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsNotNullOrEmpty(System.String)">
            <summary>
            是否为空
            </summary>
            <param name="source">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsNullOrWhiteSpace(System.String)">
            <summary>
            指示指定的字符串是 null、空还是仅由空白字符组成
            </summary>
            <param name="source">要测试的字符串</param>
            <returns>如果 value 参数为 null 或 System.String.Empty，或者如果 value 仅由空白字符组成，则为 true。</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsNullOrEmptyOrWhiteSpace(System.String)">
            <summary>
            字符串是否为Null或Empty或WhiteSpace
            </summary>
            <param name="source">字符串</param>
            <returns>是否为Null或Empty或WhiteSpace</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsMatch(System.String,System.String)">
            <summary>
            是否匹配相等
            </summary>
            <param name="source">字符串</param>
            <param name="pattern">相比较字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.Match(System.String,System.String)">
            <summary>
            相同的字符串
            </summary>
            <param name="source">字符串</param>
            <param name="pattern">相比较字符串</param>
            <returns>相同的字符串</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsUrlAddress(System.String)">
            <summary>
            是否是url地址
            </summary>
            <param name="checkStr">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsEmail(System.String)">
            <summary>
            判断是否是正确的电子邮件格式
            </summary>
            <param name="source">字符串</param>
            <returns>bool</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsIdCard(System.String)">
            <summary>
            判断是否是正确的身份证编码格式
            </summary>
            <param name="source">字符串</param>
            <returns>bool</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsIdCard15(System.String,System.String@)">
            <summary>
            判断是否是15位身份证号
            </summary>
            <param name="id">身份证号</param>
            <param name="mesage">返回结果信息</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsPostcode(System.String)">
            <summary>
            判断是否是正确的邮政编码格式
            </summary>
            <param name="source">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsMobilePhone(System.String)">
            <summary>
            判断是否是正确的中国移动或联通电话
            </summary>
            <param name="source">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsTelephone(System.String)">
            <summary>
            判断是否是正确的中国固定电话
            </summary>
            <param name="source">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsHasHtml(System.String)">
            <summary>
            包含html标签
            </summary>
            <param name="source">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsMatchRegex(System.String,System.String)">
            <summary>
            是否匹配正则表达式，匹配返回true，否则false
            </summary>
            <param name="source">字符串</param>
            <param name="regex">正则表达式</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsIp(System.String)">
            <summary>
            判断字符串是否是IP，如果是返回True，不是返回False
            </summary>
            <param name="source">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsHasChinese(System.String)">
            <summary>
            是否包含中文或全角字符
            </summary>
            <param name="checkStr">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsAllChinese(System.String)">
            <summary>
            是否是中文
            </summary>
            <param name="checkStr">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsInt(System.String)">
            <summary>
            是否为正整数
            </summary>
            <param name="intStr">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsIntWithZero(System.String)">
            <summary>
            非负整数
            </summary>
            <param name="intStr">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsNumber(System.String)">
            <summary>
            是否是数字
            </summary>
            <param name="checkStr">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsDecimal(System.String)">
            <summary>
            是否是Decimal类型数据
            </summary>
            <param name="checkStr">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsDateTime(System.String)">
            <summary>
            是否是DateTime类型数据
            </summary>
            <param name="checkStr">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsLegalXmlChar(System.Int32)">
            <summary>
            判断是否是XML 1.0允许的字符
            </summary>
            <param name="character">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.IsLegalXmlChar(System.String)">
            <summary>
            判断是否是合法的 XML 1.0标准允许的字符串 true：标准 false：包含不标准的字符
            </summary>
            <param name="xml">xml</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.CreateNonce(System.String,System.Int64)">
            <summary>
            创建伪随机字符串
            </summary>
            <param name="str"></param>
            <param name="strleg">长度</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.CreateNumberNonce(System.String,System.Int32)">
            <summary>
            创建伪随机数字符串
            </summary>
            <param name="str"></param>
            <param name="numleg"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.RemoveLine(System.String)">
            <summary>
            移除换行
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToUrlEncode(System.String)">
            <summary>
            url进行编码
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StringExtentions.ToUrlDecode(System.String)">
            <summary>
            url进行解码
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.StructExtensions">
            <summary>
            结构类型扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.Byte)">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.Nullable{System.Byte})">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.SByte)">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.Nullable{System.SByte})">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.Int32)">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.Nullable{System.Int32})">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.Int64)">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.Nullable{System.Int64})">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.String)">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.Decimal)">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.StructExtensions.IsDefault(System.Nullable{System.Decimal})">
            <summary>
            是否是默认值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Extensions.TimeExtensions">
            <summary>
            时间扩展
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.TimeExtensions.GetNowDate(System.DateTime)">
            <summary>
            获取当前日期（年-月-日）
            </summary>
            <param name="date">当前时间</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.TimeExtensions.MonthFirstDay(System.DateTime)">
            <summary>
            获取当前月的第一天
            </summary>
            <param name="dateTime">当前时间</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.TimeExtensions.MonthLastDay(System.DateTime)">
            <summary>
            获取当前月的最后一天时间
            </summary>
            <param name="dateTime">当前时间</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.TimeExtensions.NowDate(System.DateTime)">
            <summary>
            当前时间（date）(yyyy-MM-dd)
            </summary>
            <param name="dateTime">当前时间</param>
            <returns>string</returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.TimeExtensions.ToTimeStamp(System.DateTime,System.Int32)">
            <summary>
            时间转换成时间戳
            </summary>
            <param name="nowTime">当前时间</param>
            <param name="timeZoneHours">时区间隔默认东八区减8小时</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.TimeExtensions.ToDateTime(System.Int64,System.Int32)">
            <summary>
            时间戳转换成时间
            </summary>
            <param name="timestamp">时间戳</param>
            <param name="timeZoneHours">时区间隔默认东八区加8小时</param>
            <returns></returns>
        </member>
        <member name="M:JeezFoundation.Core.Extensions.TimeExtensions.ToCstTime(System.DateTime)">
            <summary>
            所有不同操作系统获取时间的方法，统一使用DateTime.Now.ToCstTime()获取，确保Window和Linux获取的时间相同
            e : DateTime.Now.ToCstTime()
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Helper.FileHelper">
            <summary>
            文件相关助手类
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Helper.FileHelper.GetAbsolutePath(System.String,System.String)">
            <summary>
            反射获取类信息
            </summary>
            <param name="assemblyName">程序集名称</param>
            <param name="className">类名</param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Helper.XmlHelper">
            <summary>
            XML帮助类
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Helper.XmlHelper.Convert(System.IO.Stream)">
            <summary>
            序列化将流转成XML字符串
            </summary>
            <param name="stream">流</param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Linq.ExpressionHelper">
            <summary>
            动态表达式帮助类
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ExpressionHelper.True``1">
            <summary>
            Creates a predicate that evaluates to true.
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ExpressionHelper.False``1">
            <summary>
            Creates a predicate that evaluates to false.
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ExpressionHelper.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates a predicate expression from the specified lambda expression.
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ExpressionHelper.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Combines the first predicate with the second using the logical "and".
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ExpressionHelper.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Combines the first predicate with the second using the logical "or".
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ExpressionHelper.Not``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Negates the predicate.
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ExpressionHelper.Compose``1(System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
            Combines the first expression with the second using the specified merge function.
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.Linq.ParameterRebinder">
            <summary>
            ParameterRebinder
            </summary>
        </member>
        <member name="F:JeezFoundation.Core.Linq.ParameterRebinder.map">
            <summary>
            The ParameterExpression map
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ParameterRebinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:JeezFoundation.Core.Linq.ParameterRebinder"/> class.
            </summary>
            <param name="map">The map.</param>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ParameterRebinder.ReplaceParameters(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression)">
            <summary>
            Replaces the parameters.
            </summary>
            <param name="map">The map.</param>
            <param name="exp">The exp.</param>
            <returns>Expression</returns>
        </member>
        <member name="M:JeezFoundation.Core.Linq.ParameterRebinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits the parameter.
            </summary>
            <param name="p">The p.</param>
            <returns>Expression</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.GetInitials(System.String)">
            <summary>
            取中文文本的拼音首字母
            </summary>
            <param name="text">编码为UTF8的文本</param>
            <returns>返回中文对应的拼音首字母</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.GetInitials(System.String,System.Text.Encoding)">
            <summary>
            取中文文本的拼音首字母
            </summary>
            <param name="text">文本</param>
            <param name="encoding">源文本的编码</param>
            <returns>返回encoding编码类型中文对应的拼音首字母</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.GetPinyin(System.String)">
            <summary>
            取中文文本的拼音
            </summary>
            <param name="text">编码为UTF8的文本</param>
            <returns>返回中文文本的拼音</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.GetPinyin(System.String,System.Text.Encoding)">
            <summary>
            取中文文本的拼音
            </summary>
            <param name="text">编码为UTF8的文本</param>
            <param name="encoding">源文本的编码</param>
            <returns>返回encoding编码类型的中文文本的拼音</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.GetChineseText(System.String)">
            <summary>
            取和拼音相同的汉字列表
            </summary>
            <param name="pinyin">编码为UTF8的拼音</param>
            <returns>取拼音相同的汉字列表，如拼音“ai”将会返回“唉爱……”等</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.GetChineseText(System.String,System.Text.Encoding)">
            <summary>
            取和拼音相同的汉字列表，编码同参数encoding
            </summary>
            <param name="pinyin">编码为encoding的拼音</param>
            <param name="encoding">编码</param>
            <returns>返回编码为encoding的拼音为pinyin的汉字列表，如拼音“ai”将会返回“唉爱……”等</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.GetPinyin(System.Char)">
            <summary>
            返回单个字符的汉字拼音
            </summary>
            <param name="ch">编码为UTF8的中文字符</param>
            <returns>ch对应的拼音</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.GetPinyin(System.Char,System.Text.Encoding)">
            <summary>
            返回单个字符的汉字拼音
            </summary>
            <param name="ch">编码为encoding的中文字符</param>
            <param name="encoding">编码方式</param>
            <returns>编码为encoding的ch对应的拼音</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.ConvertEncoding(System.String,System.Text.Encoding,System.Text.Encoding)">
            <summary>
            转换编码 
            </summary>
            <param name="text">文本</param>
            <param name="srcEncoding">源编码</param>
            <param name="dstEncoding">目标编码</param>
            <returns>目标编码文本</returns>
        </member>
        <member name="M:JeezFoundation.Core.PinYin.PinYin.GetHashIndex(System.Char)">
            <summary>
            取文本索引值
            </summary>
            <param name="ch">字符</param>
            <returns>文本索引值</returns>
        </member>
        <member name="T:JeezFoundation.Core.Security.EncryptProvider">
            <summary>
            加密
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Security.EncryptProvider.CreateSha1Code(System.String)">
            <summary>
            创建sha1加密
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.Security.IVerificationCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="M:JeezFoundation.Core.Security.TokenProvider.CreateToken(System.String,System.String,System.String)">
            <summary>
            创建Token
            </summary>
            <param name="appkey"></param>
            <param name="appsecret"></param>
            <param name="nonceStr"></param>
            <returns></returns>
        </member>
        <member name="T:JeezFoundation.Core.ViewModel.IdAndValue">
            <summary>
            Id 和 值
            </summary>
        </member>
        <member name="T:JeezFoundation.Core.ViewModel.NameAndValue">
            <summary>
            NAME AND VALUE
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.ViewModel.NameAndValue.Name">
            <summary>
            NAME
            </summary>
        </member>
        <member name="P:JeezFoundation.Core.ViewModel.NameAndValue.Value">
            <summary>
            VALUE
            </summary>
        </member>
    </members>
</doc>
